---
apiVersion: v1
kind: Service
metadata:
  name: go-checker-front
  labels:
    app: go-checker-front
spec:
  selector:
    app: go-checker-front
  ports:
  - port: 80
    targetPort: 8080
---
#### Ingress
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: go-checker-front
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "80"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "80"
spec:
  rules:
  - host: ${DOMAINNAME}
    http:
      paths:
      - backend:
          serviceName: go-checker-front
          servicePort: 80
        path: /
  tls:
  - hosts:
    - ${DOMAINNAME}
    secretName: virgil-tls
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: go-checker-front
  labels:
    app: go-checker-front
spec:
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app: go-checker-front
  template:
    metadata:
      labels:
        app: go-checker-front
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - go-checker-front
            topologyKey: "kubernetes.io/hostname"
      containers:
        - name: go-checker-front
          image: skandyla/go-checker-front
          imagePullPolicy: "Always"
          ports:
            - name: http
              containerPort: 8080
          env:
            - name: ALWAYS_CHANGE_VAR
              value: "${DATE}"
            - name: URL
              value: "http://go-cassandra-checker.testing/select"
              #value: "{{ ansible_date_time.epoch }}"
          livenessProbe:
            tcpSocket:
              port: 8080
            #httpGet:
            #  path: /_service/status
            #  port: 8080
            #  scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 20
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /info
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            timeoutSeconds: 20

